%!PS-Adobe-2.0 EPSF-2.0
%%Title: lifetime_in_chunk1.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Thu Sep 27 05:06:51 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 230 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 230 50 lineto 230 176 lineto 50 176 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (lifetime_in_chunk1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (tjkim)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Sep 27 05:06:51 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 3600.00 2520.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
434 378 M
63 0 V
2850 0 R
-63 0 V
stroke
350 378 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
434 619 M
63 0 V
2850 0 R
-63 0 V
stroke
350 619 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
434 859 M
63 0 V
2850 0 R
-63 0 V
stroke
350 859 M
[ [(Helvetica) 140.0 0.0 true true 0 (2)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
434 1100 M
63 0 V
2850 0 R
-63 0 V
stroke
350 1100 M
[ [(Helvetica) 140.0 0.0 true true 0 (3)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
434 1341 M
63 0 V
2850 0 R
-63 0 V
stroke
350 1341 M
[ [(Helvetica) 140.0 0.0 true true 0 (4)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
434 1582 M
63 0 V
2850 0 R
-63 0 V
stroke
350 1582 M
[ [(Helvetica) 140.0 0.0 true true 0 (5)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
434 1822 M
63 0 V
2850 0 R
-63 0 V
stroke
350 1822 M
[ [(Helvetica) 140.0 0.0 true true 0 (6)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
434 2063 M
63 0 V
2850 0 R
-63 0 V
stroke
350 2063 M
[ [(Helvetica) 140.0 0.0 true true 0 (7)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
434 2304 M
63 0 V
2850 0 R
-63 0 V
stroke
350 2304 M
[ [(Helvetica) 140.0 0.0 true true 0 (8)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
434 378 M
0 63 V
0 1911 R
0 -63 V
stroke
434 238 M
[ [(Times-Roman) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1221 378 M
0 63 V
0 1911 R
0 -63 V
stroke
1221 238 M
[ [(Times-Roman) 160.0 0.0 true true 0 ( 100)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2009 378 M
0 63 V
0 1911 R
0 -63 V
stroke
2009 238 M
[ [(Times-Roman) 160.0 0.0 true true 0 ( 200)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2796 378 M
0 63 V
0 1911 R
0 -63 V
stroke
2796 238 M
[ [(Times-Roman) 160.0 0.0 true true 0 ( 300)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
434 2352 N
434 378 L
2913 0 V
0 1974 V
-2913 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
112 1365 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 160.0 0.0 true true 0 (Lifetime \(no. of writes x 10)]
[(Times-Roman) 128.0 80.0 true true 0 (6)]
[(Times-Roman) 160.0 0.0 true true 0 (\))]
] -69.3 MCshow
grestore
LTb
LCb setrgbcolor
1890 98 M
[ [(Times-Roman) 160.0 0.0 true true 0 (Logical Time )]
] -53.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
434 379 Pls
442 379 Pls
450 379 Pls
458 379 Pls
465 379 Pls
473 379 Pls
481 379 Pls
489 379 Pls
497 379 Pls
505 379 Pls
513 378 Pls
521 379 Pls
528 379 Pls
536 379 Pls
544 382 Pls
552 381 Pls
560 381 Pls
568 381 Pls
576 381 Pls
584 381 Pls
591 381 Pls
599 382 Pls
607 382 Pls
615 382 Pls
623 382 Pls
631 382 Pls
639 382 Pls
647 382 Pls
654 382 Pls
662 392 Pls
670 392 Pls
678 392 Pls
686 392 Pls
694 392 Pls
702 391 Pls
710 391 Pls
717 428 Pls
725 428 Pls
733 428 Pls
741 428 Pls
749 428 Pls
757 428 Pls
765 428 Pls
773 428 Pls
780 428 Pls
788 428 Pls
796 445 Pls
804 445 Pls
812 445 Pls
820 445 Pls
828 445 Pls
836 445 Pls
843 445 Pls
851 445 Pls
859 553 Pls
867 553 Pls
875 553 Pls
883 553 Pls
891 553 Pls
899 553 Pls
906 553 Pls
914 443 Pls
922 443 Pls
930 442 Pls
938 442 Pls
946 442 Pls
954 442 Pls
961 442 Pls
969 535 Pls
977 535 Pls
985 535 Pls
993 535 Pls
1001 535 Pls
1009 535 Pls
1017 535 Pls
1024 535 Pls
1032 535 Pls
1040 535 Pls
1048 858 Pls
1056 857 Pls
1064 857 Pls
1072 856 Pls
1080 494 Pls
1087 856 Pls
1095 494 Pls
1103 494 Pls
1111 856 Pls
1119 494 Pls
1127 625 Pls
1135 625 Pls
1143 625 Pls
1150 505 Pls
1158 505 Pls
1166 505 Pls
1174 505 Pls
1182 505 Pls
1190 505 Pls
1198 504 Pls
1206 504 Pls
1213 504 Pls
1221 504 Pls
1229 504 Pls
1237 504 Pls
1245 504 Pls
1253 504 Pls
1261 504 Pls
1269 504 Pls
1276 850 Pls
1284 849 Pls
1292 849 Pls
1300 849 Pls
1308 846 Pls
1316 733 Pls
1324 733 Pls
1332 733 Pls
1339 732 Pls
1347 732 Pls
1355 732 Pls
1363 732 Pls
1371 732 Pls
1379 732 Pls
1387 494 Pls
1395 494 Pls
1402 494 Pls
1410 494 Pls
1418 493 Pls
1426 493 Pls
1434 493 Pls
1442 493 Pls
1450 483 Pls
1457 483 Pls
1465 483 Pls
1473 483 Pls
1481 483 Pls
1489 483 Pls
1497 483 Pls
1505 483 Pls
1513 831 Pls
1520 831 Pls
1528 831 Pls
1536 831 Pls
1544 831 Pls
1552 831 Pls
1560 831 Pls
1568 830 Pls
1576 830 Pls
1583 830 Pls
1591 756 Pls
1599 756 Pls
1607 754 Pls
1615 762 Pls
1623 762 Pls
1631 761 Pls
1639 746 Pls
1646 745 Pls
1654 745 Pls
1662 745 Pls
1670 745 Pls
1678 744 Pls
1686 744 Pls
1694 744 Pls
1702 744 Pls
1709 744 Pls
1717 744 Pls
1725 505 Pls
1733 505 Pls
1741 505 Pls
1749 504 Pls
1757 504 Pls
1765 504 Pls
1772 504 Pls
1780 647 Pls
1788 647 Pls
1796 647 Pls
1804 645 Pls
1812 632 Pls
1820 632 Pls
1828 632 Pls
1835 632 Pls
1843 632 Pls
1851 631 Pls
1859 631 Pls
1867 631 Pls
1875 631 Pls
1883 631 Pls
1891 631 Pls
1898 631 Pls
1906 631 Pls
1914 631 Pls
1922 631 Pls
1930 631 Pls
1938 631 Pls
1946 631 Pls
1953 631 Pls
1961 631 Pls
1969 631 Pls
1977 630 Pls
1985 630 Pls
1993 630 Pls
2001 630 Pls
2009 630 Pls
2016 420 Pls
2024 420 Pls
2032 420 Pls
2040 420 Pls
2048 420 Pls
2056 745 Pls
2064 745 Pls
2072 745 Pls
2079 745 Pls
2087 744 Pls
2095 744 Pls
2103 744 Pls
2111 744 Pls
2119 744 Pls
2127 743 Pls
2135 792 Pls
2142 792 Pls
2150 792 Pls
2158 792 Pls
2166 792 Pls
2174 792 Pls
2182 792 Pls
2190 792 Pls
2198 792 Pls
2205 792 Pls
2213 792 Pls
2221 792 Pls
2229 792 Pls
2237 792 Pls
2245 792 Pls
2253 792 Pls
2261 792 Pls
2268 792 Pls
2276 792 Pls
2284 792 Pls
2292 792 Pls
2300 792 Pls
2308 792 Pls
2316 792 Pls
2324 792 Pls
2331 792 Pls
2339 792 Pls
2347 792 Pls
2355 792 Pls
2363 792 Pls
2371 791 Pls
2379 791 Pls
2386 791 Pls
2394 791 Pls
2402 791 Pls
2410 791 Pls
2418 791 Pls
2426 791 Pls
2434 791 Pls
2442 791 Pls
2449 791 Pls
2457 791 Pls
2465 791 Pls
2473 450 Pls
2481 482 Pls
2489 759 Pls
2497 759 Pls
2505 759 Pls
2512 759 Pls
2520 759 Pls
2528 759 Pls
2536 759 Pls
2544 759 Pls
2552 759 Pls
2560 759 Pls
2568 758 Pls
2575 758 Pls
2583 758 Pls
2591 758 Pls
2599 758 Pls
2607 758 Pls
2615 758 Pls
2623 758 Pls
2631 758 Pls
2638 758 Pls
2646 758 Pls
2654 758 Pls
2662 758 Pls
2670 758 Pls
2678 758 Pls
2686 758 Pls
2694 758 Pls
2701 763 Pls
2709 763 Pls
2717 763 Pls
2725 763 Pls
2733 763 Pls
2741 763 Pls
2749 763 Pls
2757 763 Pls
2764 763 Pls
2772 763 Pls
2780 763 Pls
2788 763 Pls
2796 763 Pls
2804 762 Pls
2812 762 Pls
2820 762 Pls
2827 762 Pls
2835 762 Pls
2843 633 Pls
2851 633 Pls
2859 633 Pls
2867 633 Pls
2875 633 Pls
2882 633 Pls
2890 633 Pls
2898 633 Pls
2906 633 Pls
2914 633 Pls
2922 633 Pls
2930 633 Pls
2938 633 Pls
2945 633 Pls
2953 633 Pls
2961 633 Pls
2969 633 Pls
2977 633 Pls
2985 633 Pls
2993 633 Pls
3001 633 Pls
3008 633 Pls
3016 633 Pls
3024 632 Pls
3032 740 Pls
3040 740 Pls
3048 740 Pls
3056 740 Pls
3064 740 Pls
3071 740 Pls
3079 740 Pls
3087 740 Pls
3095 740 Pls
3103 740 Pls
3111 740 Pls
3119 740 Pls
3127 740 Pls
3134 740 Pls
3142 740 Pls
3150 740 Pls
3158 740 Pls
3166 740 Pls
3174 740 Pls
3182 740 Pls
3190 740 Pls
3197 740 Pls
3205 740 Pls
3213 740 Pls
3221 740 Pls
3229 740 Pls
3237 740 Pls
3245 740 Pls
3253 740 Pls
3260 740 Pls
3268 740 Pls
3276 740 Pls
3284 740 Pls
3292 740 Pls
3300 740 Pls
3308 740 Pls
3316 740 Pls
3323 740 Pls
3331 740 Pls
3339 740 Pls
3347 740 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
434 2352 N
434 378 L
2913 0 V
0 1974 V
-2913 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
